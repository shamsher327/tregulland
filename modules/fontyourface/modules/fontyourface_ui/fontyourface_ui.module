<?php

/**
 * @file
 * Provides UI for managing information about web fonts.
 */

/**
 * Implements hook_menu().
 */
function fontyourface_ui_menu() {

  $items = array();
  
  $items['admin/config/fontyourface/provider'] = array(
    'title' => 'Providers',
    'description' => 'Manage font providers.',
    'route_name' => 'fontyourface_ui.provider_list',
  );
  
  $items['admin/config/fontyourface/provider/%fontyourface_provider'] = array(
    'title callback' => 'entity_page_label',
    'title arguments' => array(4),
    'page callback' => 'fontyourface_ui_provider_view',
    'page arguments' => array(4),
    'access callback' => 'entity_page_access',
    'access arguments' => array(4, 'view'),
  );

  $items['admin/config/fontyourface/font/%fontyourface_provider/add'] = array(
    'title' => 'Add Font',
    'page callback' => 'fontyourface_ui_font_add',
    'page arguments' => array(4),
    'access arguments' => array('administer fonts'),
  );

  return $items;

} // fontyourface_ui_menu

/**
 * Implements hook_theme().
 */
function fontyourface_ui_theme() {

  return array(
    'fontyourface_ui_provider_overview' => array(
      'render element' => 'form',
    ),
  );
  
} // fontyourface_ui_theme

/**
 * Form builder to list and manage providers.
 *
 * @ingroup forms
 */
function fontyourface_ui_provider_overview($form) {

  $providers = fontyourface_provider_load_multiple();
  ksort($providers);

  $form['#tree'] = TRUE;

  foreach ($providers as $provider) {

    $form[$provider->id()]['#provider'] = $provider;
    $form[$provider->id()]['name'] = array('#markup' => check_plain($provider->name));

    $links = array();
    $links['view'] = array(
      'title' => t('view provider'),
      'href' => 'admin/config/fontyourface/provider/' . $provider->id(),
    );
    $form[$provider->id()]['operations'] = array(
      '#type' => 'operations',
      '#links' => $links,
    );

  } // foreach

  return $form;

} // fontyourface_ui_provider_overview

/**
 * Returns HTML for the vocabulary overview form as a sortable list of vocabularies.
 *
 * @param $variables
 *   An associative array containing:
 *   - form: A render element representing the form.
 *
 * @see fontyourface_ui_provider_overview()
 * @ingroup themeable
 */
function theme_fontyourface_ui_provider_overview($variables) {

  $form = $variables['form'];

  $rows = array();

  foreach (element_children($form) as $key) {

    if (isset($form[$key]['name'])) {

      $provider = &$form[$key];

      $row = array();
      $row[] = drupal_render($provider['name']);
      $row[] = drupal_render($provider['operations']);
      $rows[] = array('data' => $row, );

    } // if

  } // foreach

  $header = array(t('Provider name'));

  $header[] = t('Operations');

  return theme('table', array('header' => $header, 'rows' => $rows, 'empty' => t('No providers available. <a href="@link">Enable provider modules</a>.', array('@link' => url('admin/modules'))), 'attributes' => array('id' => 'edit-modules-font-your-face'))) . drupal_render_children($form);

} // theme_fontyourface_ui_provider_overview

function fontyourface_ui_provider_view(Drupal\fontyourface\Plugin\Core\Entity\Provider $provider) {

  return $provider->name;

} // fontyourface_ui_provider_view

function fontyourface_ui_font_add(Drupal\fontyourface\Plugin\Core\Entity\Provider $provider) {

  $font = entity_create('fontyourface_font', array('pid' => $provider->id()));
  return entity_get_form($font);

} // fontyourface_ui_font_add

/**
 * Implements hook_field_extra_fields().
 */
function fontyourface_ui_field_extra_fields() {

  $extra = array();

  foreach (fontyourface_provider_get_names() as $bundle) {

    $extra['fontyourface_font'][$bundle]['display']['preview'] = array(
      'label' => t('Short Preview'),
      'description' => t('Short preview for font'),
      'weight' => 0,
      'visible' => TRUE,
    );

    $extra['fontyourface_font'][$bundle]['display']['enable'] = array(
      'label' => t('Enable Link'),
      'description' => t('Link to enable/disable font'),
      'weight' => 0,
      'visible' => TRUE,
    );

  } // foreach

  return $extra;

} // fontyourface_ui_field_extra_fields
